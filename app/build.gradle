/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.13/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation libs.guava

    // JavaFX dependencies (adjust classifier if not on Windows: use 'mac' or 'linux')
    def os = org.gradle.internal.os.OperatingSystem.current()
    def platform = os.isWindows() ? 'win' : os.isMacOsX() ? 'mac-aarch64' : 'linux'

    def javafxVersion = '17.0.2'
    implementation "org.openjfx:javafx-base:$javafxVersion:$platform"
    implementation "org.openjfx:javafx-controls:$javafxVersion:$platform"
    implementation "org.openjfx:javafx-graphics:$javafxVersion:$platform"
    implementation "org.openjfx:javafx-fxml:$javafxVersion:$platform"

    // Apache Commons Text example dependency (ensure you have a version number)
    implementation 'org.apache.commons:commons-text:1.10.0'
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit4 test framework
            useJUnit('4.13.2')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.denyandconquer.Main'
}
